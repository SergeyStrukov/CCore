--- Atoms ----------------------------------------------------------------------

0) A("(")
1) A(")")
2) A("*")
3) A("+")
4) A("x")

--- Syntax classes -------------------------------------------------------------

0) EXPR ! { 0) A 1) M 2) P }
  Rule(0)
  Rule(1)
  Rule(2)
  Rule(3)

--- Rules ----------------------------------------------------------------------

0) EXPR::opVar -> EXPR.P
  Atom(4,A("x"))
1) EXPR::opBra -> EXPR.P
  Atom(0,A("("))  Synt(0,EXPR)  Atom(1,A(")"))
2) EXPR::opAdd -> EXPR.A if( @2 >= M(1) )
  Synt(0,EXPR)  Atom(3,A("+"))  Synt(0,EXPR)
3) EXPR::opMul -> EXPR.M if( ( @0 >= P(2) & @2 >= M(1) ) )
  Synt(0,EXPR)  Atom(2,A("*"))  Synt(0,EXPR)

--------------------------------------------------------------------------------
--- States ---------------------------------------------------------------------

( 0 ; NULL ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.A -> ( 24 ; EXPR.A )

  EXPR.M -> ( 24 ; EXPR.A )

  EXPR.P -> ( 23 ; EXPR.P )

-----

( 1 ; A("(") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.A -> ( 16 ; A("(") EXPR.A )

  EXPR.M -> ( 16 ; A("(") EXPR.A )

  EXPR.P -> ( 14 ; A("(") EXPR.P )

-----

( 2 ; A("(") EXPR.A A("+") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.M -> ( 10 ; A("(") EXPR.A A("+") EXPR.M )

  EXPR.P -> ( 9 ; A("(") EXPR.A A("+") EXPR.P )

-----

( 3 ; A("(") EXPR.P A("*") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.M -> ( 12 ; A("(") EXPR.P A("*") EXPR.M )

  EXPR.P -> ( 11 ; A("(") EXPR.P A("*") EXPR.P )

-----

( 4 ; A("(") A("(") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.A -> ( 15 ; A("(") A("(") EXPR.A )

  EXPR.M -> ( 15 ; A("(") A("(") EXPR.A )

  EXPR.P -> ( 13 ; A("(") A("(") EXPR.P )

-----

( 5 ; EXPR.A A("+") ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.M -> ( 20 ; EXPR.A A("+") EXPR.M )

  EXPR.P -> ( 19 ; EXPR.A A("+") EXPR.P )

-----

( 6 ; EXPR.P A("*") ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.M -> ( 22 ; EXPR.P A("*") EXPR.M )

  EXPR.P -> ( 21 ; EXPR.P A("*") EXPR.P )

-----

( 7 ; A("(") A("x") ) = 1

-----

( 8 ; A("(") A("(") EXPR.A A(")") ) = 2

-----

( 9 ; A("(") EXPR.A A("+") EXPR.P ) = 3

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

-----

( 10 ; A("(") EXPR.A A("+") EXPR.M ) = 4

-----

( 11 ; A("(") EXPR.P A("*") EXPR.P ) = 5

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

-----

( 12 ; A("(") EXPR.P A("*") EXPR.M ) = 6

-----

( 13 ; A("(") A("(") EXPR.P ) = 7

  A(")") -> ( 8 ; A("(") A("(") EXPR.A A(")") )

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 14 ; A("(") EXPR.P ) = 7

  A(")") -> ( 18 ; A("(") EXPR.A A(")") )

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 15 ; A("(") A("(") EXPR.A ) = 8

  A(")") -> ( 8 ; A("(") A("(") EXPR.A A(")") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 16 ; A("(") EXPR.A ) = 8

  A(")") -> ( 18 ; A("(") EXPR.A A(")") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 17 ; A("x") ) = 9

-----

( 18 ; A("(") EXPR.A A(")") ) = 10

-----

( 19 ; EXPR.A A("+") EXPR.P ) = 11

  A("*") -> ( 6 ; EXPR.P A("*") )

-----

( 20 ; EXPR.A A("+") EXPR.M ) = 12

-----

( 21 ; EXPR.P A("*") EXPR.P ) = 13

  A("*") -> ( 6 ; EXPR.P A("*") )

-----

( 22 ; EXPR.P A("*") EXPR.M ) = 14

-----

( 23 ; EXPR.P ) = 15

  A("*") -> ( 6 ; EXPR.P A("*") )

  A("+") -> ( 5 ; EXPR.A A("+") )

-----

( 24 ; EXPR.A ) = 16

  A("+") -> ( 5 ; EXPR.A A("+") )

--- Properties -----------------------------------------------------------------

0) 

  A("(") : <-

  A("x") : <-

-----

1) 

  A(")") : @EXPR::opVar

  A("*") : @EXPR::opVar

  A("+") : @EXPR::opVar

-----

2) 

  A(")") : @EXPR::opBra

  A("*") : @EXPR::opBra

  A("+") : @EXPR::opBra

-----

3) 

  A(")") : @EXPR::opAdd

  A("*") : <-

  A("+") : @EXPR::opAdd

-----

4) 

  A(")") : @EXPR::opAdd

  A("+") : @EXPR::opAdd

-----

5) 

  A(")") : @EXPR::opMul

  A("*") : <-

  A("+") : @EXPR::opMul

-----

6) 

  A(")") : @EXPR::opMul

  A("+") : @EXPR::opMul

-----

7) 

  A(")") : <-

  A("*") : <-

  A("+") : <-

-----

8) 

  A(")") : <-

  A("+") : <-

-----

9) 

  (End) : @EXPR::opVar

  A("*") : @EXPR::opVar

  A("+") : @EXPR::opVar

-----

10) 

  (End) : @EXPR::opBra

  A("*") : @EXPR::opBra

  A("+") : @EXPR::opBra

-----

11) 

  (End) : @EXPR::opAdd

  A("*") : <-

  A("+") : @EXPR::opAdd

-----

12) 

  (End) : @EXPR::opAdd

  A("+") : @EXPR::opAdd

-----

13) 

  (End) : @EXPR::opMul

  A("*") : <-

  A("+") : @EXPR::opMul

-----

14) 

  (End) : @EXPR::opMul

  A("+") : @EXPR::opMul

-----

15) 

  (End) : STOP

  A("*") : <-

  A("+") : <-

-----

16) 

  (End) : STOP

  A("+") : <-

--------------------------------------------------------------------------------
