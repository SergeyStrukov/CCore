--- Atoms ----------------------------------------------------------------------

0) A("(")
1) A(")")
2) A("*")
3) A("+")
4) A("x")
5) @opVar
6) @opBra
7) @opAdd
8) @opMul

--- Syntax classes -------------------------------------------------------------

0) EXPR !
  Rule(0)
  Rule(1)
  Rule(2)
  Rule(3)

--- Rules ----------------------------------------------------------------------

0) opVar -> EXPR
  A("x")  @opVar
1) opBra -> EXPR
  A("(")  EXPR  A(")")  @opBra
2) opAdd -> EXPR
  EXPR  A("+")  EXPR  @opAdd
3) opMul -> EXPR
  EXPR  A("*")  EXPR  @opMul

--------------------------------------------------------------------------------
--- States ---------------------------------------------------------------------

( 0 ; NULL ) = 0

  A("(") -> ( 3 ; A("(") )

  A("x") -> ( 13 ; A("x") )

  EXPR -> ( 17 ; EXPR )

-----

( 1 ; A("(") EXPR A("*") ) = 0

  A("(") -> ( 2 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR -> ( 10 ; A("(") EXPR A("*") EXPR )

-----

( 2 ; A("(") A("(") ) = 0

  A("(") -> ( 2 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR -> ( 11 ; A("(") A("(") EXPR )

-----

( 3 ; A("(") ) = 0

  A("(") -> ( 2 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR -> ( 12 ; A("(") EXPR )

-----

( 4 ; EXPR A("+") ) = 0

  A("(") -> ( 3 ; A("(") )

  A("x") -> ( 13 ; A("x") )

  EXPR -> ( 15 ; EXPR A("+") EXPR )

-----

( 5 ; EXPR A("*") ) = 0

  A("(") -> ( 3 ; A("(") )

  A("x") -> ( 13 ; A("x") )

  EXPR -> ( 16 ; EXPR A("*") EXPR )

-----

( 6 ; A("(") EXPR A("+") ) = 0

  A("(") -> ( 2 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR -> ( 9 ; A("(") EXPR A("+") EXPR )

-----

( 7 ; A("(") A("x") ) = 1

-----

( 8 ; A("(") A("(") EXPR A(")") ) = 2

-----

( 9 ; A("(") EXPR A("+") EXPR ) = 3

  A("*") -> ( 1 ; A("(") EXPR A("*") )

  A("+") -> ( 6 ; A("(") EXPR A("+") )

-----

( 10 ; A("(") EXPR A("*") EXPR ) = 4

  A("*") -> ( 1 ; A("(") EXPR A("*") )

  A("+") -> ( 6 ; A("(") EXPR A("+") )

-----

( 11 ; A("(") A("(") EXPR ) = 5

  A(")") -> ( 8 ; A("(") A("(") EXPR A(")") )

  A("*") -> ( 1 ; A("(") EXPR A("*") )

  A("+") -> ( 6 ; A("(") EXPR A("+") )

-----

( 12 ; A("(") EXPR ) = 5

  A(")") -> ( 14 ; A("(") EXPR A(")") )

  A("*") -> ( 1 ; A("(") EXPR A("*") )

  A("+") -> ( 6 ; A("(") EXPR A("+") )

-----

( 13 ; A("x") ) = 6

-----

( 14 ; A("(") EXPR A(")") ) = 7

-----

( 15 ; EXPR A("+") EXPR ) = 8

  A("*") -> ( 5 ; EXPR A("*") )

  A("+") -> ( 4 ; EXPR A("+") )

-----

( 16 ; EXPR A("*") EXPR ) = 9

  A("*") -> ( 5 ; EXPR A("*") )

  A("+") -> ( 4 ; EXPR A("+") )

-----

( 17 ; EXPR ) = 10

  A("*") -> ( 5 ; EXPR A("*") )

  A("+") -> ( 4 ; EXPR A("+") )

--- Estimates ------------------------------------------------------------------

0) 

  A("(") : <-

  A("x") : <-

-----

1) 

  A(")") : @opVar

  A("*") : @opVar

  A("+") : @opVar

-----

2) 

  A(")") : @opBra

  A("*") : @opBra

  A("+") : @opBra

-----

3) CONFLICT

  A(")") : @opAdd

  A("*") : <- @opAdd  CONFLICT

  A("+") : <- @opAdd  CONFLICT

-----

4) CONFLICT

  A(")") : @opMul

  A("*") : <- @opMul  CONFLICT

  A("+") : <- @opMul  CONFLICT

-----

5) 

  A(")") : <-

  A("*") : <-

  A("+") : <-

-----

6) 

  (End) : @opVar

  A("*") : @opVar

  A("+") : @opVar

-----

7) 

  (End) : @opBra

  A("*") : @opBra

  A("+") : @opBra

-----

8) CONFLICT

  (End) : @opAdd

  A("*") : <- @opAdd  CONFLICT

  A("+") : <- @opAdd  CONFLICT

-----

9) CONFLICT

  (End) : @opMul

  A("*") : <- @opMul  CONFLICT

  A("+") : <- @opMul  CONFLICT

-----

10) 

  (End) : STOP

  A("*") : <-

  A("+") : <-

--------------------------------------------------------------------------------
--- Atoms ----------------------------------------------------------------------

0) A("(")  -->  0) A("(")
1) A(")")  -->  1) A(")")
2) A("*")  -->  2) A("*")
3) A("+")  -->  3) A("+")
4) A("x")  -->  4) A("x")
5) @opAdd.A.M  -->  7) @opAdd
6) @opAdd.M.M  -->  7) @opAdd
7) @opAdd.P.M  -->  7) @opAdd
8) @opAdd.A.P  -->  7) @opAdd
9) @opAdd.M.P  -->  7) @opAdd
10) @opAdd.P.P  -->  7) @opAdd
11) @opMul.P.M  -->  8) @opMul
12) @opMul.P.P  -->  8) @opMul
13) @opVar  -->  5) @opVar
14) @opBra.A  -->  6) @opBra
15) @opBra.M  -->  6) @opBra
16) @opBra.P  -->  6) @opBra

--- Syntax classes -------------------------------------------------------------

0) EXPR.A !  -->  0) EXPR !
  Rule(0)
  Rule(1)
  Rule(2)
  Rule(3)
  Rule(4)
  Rule(5)
1) EXPR.M !  -->  0) EXPR !
  Rule(6)
  Rule(7)
2) EXPR.P !  -->  0) EXPR !
  Rule(8)
  Rule(9)
  Rule(10)
  Rule(11)

--- Rules ----------------------------------------------------------------------

0) opAdd.A.M -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.A  A("+")  EXPR.M  @opAdd.A.M
1) opAdd.M.M -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.M  A("+")  EXPR.M  @opAdd.M.M
2) opAdd.P.M -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.P  A("+")  EXPR.M  @opAdd.P.M
3) opAdd.A.P -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.A  A("+")  EXPR.P  @opAdd.A.P
4) opAdd.M.P -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.M  A("+")  EXPR.P  @opAdd.M.P
5) opAdd.P.P -> EXPR.A  -->  2) opAdd -> EXPR
  EXPR.P  A("+")  EXPR.P  @opAdd.P.P
6) opMul.P.M -> EXPR.M  -->  3) opMul -> EXPR
  EXPR.P  A("*")  EXPR.M  @opMul.P.M
7) opMul.P.P -> EXPR.M  -->  3) opMul -> EXPR
  EXPR.P  A("*")  EXPR.P  @opMul.P.P
8) opVar -> EXPR.P  -->  0) opVar -> EXPR
  A("x")  @opVar
9) opBra.A -> EXPR.P  -->  1) opBra -> EXPR
  A("(")  EXPR.A  A(")")  @opBra.A
10) opBra.M -> EXPR.P  -->  1) opBra -> EXPR
  A("(")  EXPR.M  A(")")  @opBra.M
11) opBra.P -> EXPR.P  -->  1) opBra -> EXPR
  A("(")  EXPR.P  A(")")  @opBra.P

--------------------------------------------------------------------------------
--- States ---------------------------------------------------------------------

( 0 ; NULL ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.A -> ( 24 ; EXPR.A )

  EXPR.M -> ( 24 ; EXPR.A )

  EXPR.P -> ( 23 ; EXPR.P )

-----

( 1 ; A("(") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.A -> ( 16 ; A("(") EXPR.A )

  EXPR.M -> ( 16 ; A("(") EXPR.A )

  EXPR.P -> ( 14 ; A("(") EXPR.P )

-----

( 2 ; A("(") EXPR.A A("+") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.M -> ( 10 ; A("(") EXPR.A A("+") EXPR.M )

  EXPR.P -> ( 9 ; A("(") EXPR.A A("+") EXPR.P )

-----

( 3 ; A("(") EXPR.P A("*") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.M -> ( 12 ; A("(") EXPR.P A("*") EXPR.M )

  EXPR.P -> ( 11 ; A("(") EXPR.P A("*") EXPR.P )

-----

( 4 ; A("(") A("(") ) = 0

  A("(") -> ( 4 ; A("(") A("(") )

  A("x") -> ( 7 ; A("(") A("x") )

  EXPR.A -> ( 15 ; A("(") A("(") EXPR.A )

  EXPR.M -> ( 15 ; A("(") A("(") EXPR.A )

  EXPR.P -> ( 13 ; A("(") A("(") EXPR.P )

-----

( 5 ; EXPR.A A("+") ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.M -> ( 20 ; EXPR.A A("+") EXPR.M )

  EXPR.P -> ( 19 ; EXPR.A A("+") EXPR.P )

-----

( 6 ; EXPR.P A("*") ) = 0

  A("(") -> ( 1 ; A("(") )

  A("x") -> ( 17 ; A("x") )

  EXPR.M -> ( 22 ; EXPR.P A("*") EXPR.M )

  EXPR.P -> ( 21 ; EXPR.P A("*") EXPR.P )

-----

( 7 ; A("(") A("x") ) = 1

-----

( 8 ; A("(") A("(") EXPR.A A(")") ) = 2

-----

( 9 ; A("(") EXPR.A A("+") EXPR.P ) = 3

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

-----

( 10 ; A("(") EXPR.A A("+") EXPR.M ) = 4

-----

( 11 ; A("(") EXPR.P A("*") EXPR.P ) = 5

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

-----

( 12 ; A("(") EXPR.P A("*") EXPR.M ) = 6

-----

( 13 ; A("(") A("(") EXPR.P ) = 7

  A(")") -> ( 8 ; A("(") A("(") EXPR.A A(")") )

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 14 ; A("(") EXPR.P ) = 7

  A(")") -> ( 18 ; A("(") EXPR.A A(")") )

  A("*") -> ( 3 ; A("(") EXPR.P A("*") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 15 ; A("(") A("(") EXPR.A ) = 8

  A(")") -> ( 8 ; A("(") A("(") EXPR.A A(")") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 16 ; A("(") EXPR.A ) = 8

  A(")") -> ( 18 ; A("(") EXPR.A A(")") )

  A("+") -> ( 2 ; A("(") EXPR.A A("+") )

-----

( 17 ; A("x") ) = 9

-----

( 18 ; A("(") EXPR.A A(")") ) = 10

-----

( 19 ; EXPR.A A("+") EXPR.P ) = 11

  A("*") -> ( 6 ; EXPR.P A("*") )

-----

( 20 ; EXPR.A A("+") EXPR.M ) = 12

-----

( 21 ; EXPR.P A("*") EXPR.P ) = 13

  A("*") -> ( 6 ; EXPR.P A("*") )

-----

( 22 ; EXPR.P A("*") EXPR.M ) = 14

-----

( 23 ; EXPR.P ) = 15

  A("*") -> ( 6 ; EXPR.P A("*") )

  A("+") -> ( 5 ; EXPR.A A("+") )

-----

( 24 ; EXPR.A ) = 16

  A("+") -> ( 5 ; EXPR.A A("+") )

--- Estimates ------------------------------------------------------------------

0) 

  A("(") : <-

  A("x") : <-

-----

1) 

  A(")") : @opVar

  A("*") : @opVar

  A("+") : @opVar

-----

2) 

  A(")") : @opBra

  A("*") : @opBra

  A("+") : @opBra

-----

3) 

  A(")") : @opAdd

  A("*") : <-

  A("+") : @opAdd

-----

4) 

  A(")") : @opAdd

  A("+") : @opAdd

-----

5) 

  A(")") : @opMul

  A("*") : <-

  A("+") : @opMul

-----

6) 

  A(")") : @opMul

  A("+") : @opMul

-----

7) 

  A(")") : <-

  A("*") : <-

  A("+") : <-

-----

8) 

  A(")") : <-

  A("+") : <-

-----

9) 

  (End) : @opVar

  A("*") : @opVar

  A("+") : @opVar

-----

10) 

  (End) : @opBra

  A("*") : @opBra

  A("+") : @opBra

-----

11) 

  (End) : @opAdd

  A("*") : <-

  A("+") : @opAdd

-----

12) 

  (End) : @opAdd

  A("+") : @opAdd

-----

13) 

  (End) : @opMul

  A("*") : <-

  A("+") : @opMul

-----

14) 

  (End) : @opMul

  A("+") : @opMul

-----

15) 

  (End) : STOP

  A("*") : <-

  A("+") : <-

-----

16) 

  (End) : STOP

  A("+") : <-

--------------------------------------------------------------------------------
