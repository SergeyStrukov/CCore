/* DHExp.cpp */ 
//----------------------------------------------------------------------------------------
//
//  Project: CCore 1.08
//
//  Tag: General
//
//  License: Boost Software License - Version 1.0 - August 17th, 2003 
//
//            see http://www.boost.org/LICENSE_1_0.txt or the local copy
//
//  Copyright (c) 2014 Sergey Strukov. All rights reserved.
//
//----------------------------------------------------------------------------------------
 
#include <CCore/inc/crypton/DHExp.h>
 
namespace CCore {
namespace Crypton {

/* struct DHModI */

const uint8 DHModI::G[GLen]=
 {
  2, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 
 };

const uint8 DHModI::Mod[GLen]=
 {
  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0x20, 0x36, 0x3A, 0xA6,  0xE9, 0x42, 0x4C, 0xF4, 
  0xC6, 0x7E, 0x5E, 0x62,  0x76, 0xB5, 0x85, 0xE4,  0x45, 0xC2, 0x51, 0x6D,  0x6D, 0x35, 0xE1, 0x4F, 
  0x37, 0x14, 0x5F, 0xF2,  0x6D, 0x0A, 0x2B, 0x30,  0x1B, 0x43, 0x3A, 0xCD,  0xB3, 0x19, 0x95, 0xEF, 
  0xDD, 0x04, 0x34, 0x8E,  0x79, 0x08, 0x4A, 0x51,  0x22, 0x9B, 0x13, 0x3B,  0xA6, 0xBE, 0x0B, 0x02, 
  0x74, 0xCC, 0x67, 0x8A,  0x08, 0x4E, 0x02, 0x29,  0xD1, 0x1C, 0xDC, 0x80,  0x8B, 0x62, 0xC6, 0xC4, 
  0x34, 0xC2, 0x68, 0x21,  0xA2, 0xDA, 0x0F, 0xC9,  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF
 };

const uint8 DHModI::InvMod[GLen]=
 {
  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0xDE, 0xC9, 0xC5, 0x59,  0x16, 0xBD, 0xB3, 0x0B,
  0xF8, 0x90, 0x3B, 0x3F,  0x08, 0x33, 0x13, 0x0A,  0x98, 0x5F, 0x7B, 0xAD,  0xFF, 0x62, 0x05, 0x86,
  0x08, 0xA3, 0xF5, 0xBF,  0x2D, 0x00, 0xFC, 0x30,  0xCE, 0xBD, 0x73, 0x5B,  0x0D, 0x9B, 0xBA, 0x45,
  0x40, 0x35, 0x35, 0xB3,  0x9E, 0xAF, 0xDD, 0xBE,  0xC3, 0x0A, 0xFE, 0x38,  0x3E, 0x28, 0xE6, 0x97,
  0xEC, 0x14, 0x6A, 0xA7,  0x50, 0xFF, 0x0E, 0x86,  0xA2, 0x17, 0xF7, 0x14,  0xBD, 0x4A, 0xA8, 0xE6,
  0x81, 0xA1, 0x6B, 0x26,  0xEB, 0x01, 0x57, 0x2F,  0x37, 0x26, 0x6D, 0xFB,  0xCA, 0x13, 0x21, 0x51
 };

const uint8 DHModI::Lift[GLen]=
 {
  0xCA, 0x45, 0xB6, 0x3B,  0x2D, 0xDE, 0xC4, 0x92,  0x06, 0x53, 0x02, 0x68,  0xD1, 0x13, 0x0E, 0x5C,
  0xBB, 0x83, 0x7B, 0xDB,  0x33, 0xDB, 0x75, 0x54,  0x9A, 0xCE, 0xEE, 0x22,  0xD9, 0xD3, 0xC9, 0xC8,
  0x0D, 0x55, 0x29, 0xD3,  0xB8, 0x2F, 0x80, 0xD4,  0xE3, 0x01, 0xA8, 0x03,  0x09, 0xFC, 0x89, 0x96,
  0xE7, 0xFB, 0x16, 0xBF,  0xB5, 0xFB, 0xF9, 0xB1,  0x51, 0x2E, 0x87, 0xF1,  0xC5, 0xCA, 0xCF, 0x64,
  0x11, 0xB6, 0x48, 0x84,  0x58, 0x0F, 0xDB, 0xA6,  0x97, 0x51, 0x81, 0x2E,  0x7E, 0xCE, 0x03, 0x47,
  0xCB, 0x3D, 0x97, 0xDE,  0x5D, 0x25, 0xF0, 0x36
 };

/* struct DHModII */

const uint8 DHModII::G[GLen]=
 {
  2, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0, 
  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 
 };
  
const uint8 DHModII::Mod[GLen]=
 {
  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0x81, 0x53, 0xE6, 0xEC,  0x51, 0x66, 0x28, 0x49, 
  0xE6, 0x1F, 0x4B, 0x7C,  0x11, 0x24, 0x9F, 0xAE,  0xA5, 0x9F, 0x89, 0x5A,  0xFB, 0x6B, 0x38, 0xEE, 
  0xED, 0xB7, 0x06, 0xF4,  0xB6, 0x5C, 0xFF, 0x0B,  0x6B, 0xED, 0x37, 0xA6,  0xE9, 0x42, 0x4C, 0xF4, 
  0xC6, 0x7E, 0x5E, 0x62,  0x76, 0xB5, 0x85, 0xE4,  0x45, 0xC2, 0x51, 0x6D,  0x6D, 0x35, 0xE1, 0x4F, 
  0x37, 0x14, 0x5F, 0xF2,  0x6D, 0x0A, 0x2B, 0x30,  0x1B, 0x43, 0x3A, 0xCD,  0xB3, 0x19, 0x95, 0xEF, 
  0xDD, 0x04, 0x34, 0x8E,  0x79, 0x08, 0x4A, 0x51,  0x22, 0x9B, 0x13, 0x3B,  0xA6, 0xBE, 0x0B, 0x02, 
  0x74, 0xCC, 0x67, 0x8A,  0x08, 0x4E, 0x02, 0x29,  0xD1, 0x1C, 0xDC, 0x80,  0x8B, 0x62, 0xC6, 0xC4, 
  0x34, 0xC2, 0x68, 0x21,  0xA2, 0xDA, 0x0F, 0xC9,  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF
 };
  
const uint8 DHModII::InvMod[GLen]=
 {
  0xFF, 0xFF, 0xFF, 0xFF,  0xFF, 0xFF, 0xFF, 0xFF,  0x7D, 0xAC, 0x19, 0x13,  0xAE, 0x99, 0xD7, 0xB6,
  0x15, 0x52, 0xDF, 0xAA,  0x78, 0xF2, 0x3A, 0xC5,  0x20, 0xA6, 0x82, 0xD4,  0x62, 0x40, 0xF1, 0xDB,
  0x9A, 0xCB, 0xED, 0x30,  0xFE, 0x7D, 0xAB, 0x41,  0x32, 0xB8, 0x80, 0xA3,  0x13, 0xDF, 0x02, 0x19,
  0x72, 0xD0, 0xB7, 0x5B,  0x62, 0x2B, 0xD7, 0x40,  0x45, 0x95, 0x4C, 0xDC,  0x27, 0x4D, 0xCD, 0xB3,
  0xC8, 0xF3, 0x4F, 0xBA,  0x4C, 0x91, 0x0D, 0xE8,  0xC3, 0x1B, 0xED, 0x7E,  0xE2, 0x84, 0x09, 0x7F,
  0x5B, 0x5C, 0xB6, 0xE3,  0x02, 0x6F, 0x1B, 0xA8,  0x8F, 0x45, 0xF8, 0x02,  0x77, 0x45, 0x69, 0xBC,
  0xAC, 0x67, 0x0D, 0x2E,  0xD3, 0x17, 0x6D, 0x18,  0xE0, 0xC3, 0xD9, 0xE5,  0xC1, 0x64, 0x3B, 0xA0,
  0x67, 0x04, 0x7B, 0xEF,  0x42, 0x5F, 0x3D, 0xCC,  0x0D, 0x41, 0xFE, 0x50,  0x1F, 0x0F, 0x79, 0x3B
 };

const uint8 DHModII::Lift[GLen]=
 {
  0x42, 0x1F, 0x03, 0x60,  0x55, 0xF0, 0xB8, 0x86,  0x36, 0x29, 0xBA, 0x79,  0x8D, 0x25, 0xFC, 0x19,
  0x37, 0x41, 0x93, 0x89,  0xE1, 0x2D, 0xDB, 0x8E,  0x58, 0x35, 0x20, 0xE0,  0x40, 0xCC, 0xA5, 0x7A,
  0xD1, 0x88, 0xB0, 0x47,  0x76, 0x81, 0xC5, 0x86,  0xBC, 0x9B, 0x04, 0x68,  0xD1, 0x13, 0x0E, 0x5C,
  0xBB, 0x83, 0x7B, 0xDB,  0x33, 0xDB, 0x75, 0x54,  0x9A, 0xCE, 0xEE, 0x22,  0xD9, 0xD3, 0xC9, 0xC8,
  0x0D, 0x55, 0x29, 0xD3,  0xB8, 0x2F, 0x80, 0xD4,  0xE3, 0x01, 0xA8, 0x03,  0x09, 0xFC, 0x89, 0x96,
  0xE7, 0xFB, 0x16, 0xBF,  0xB5, 0xFB, 0xF9, 0xB1,  0x51, 0x2E, 0x87, 0xF1,  0xC5, 0xCA, 0xCF, 0x64,
  0x11, 0xB6, 0x48, 0x84,  0x58, 0x0F, 0xDB, 0xA6,  0x97, 0x51, 0x81, 0x2E,  0x7E, 0xCE, 0x03, 0x47,
  0xCB, 0x3D, 0x97, 0xDE,  0x5D, 0x25, 0xF0, 0x36
 };

} // namespace Crypton
} // namespace CCore
 

